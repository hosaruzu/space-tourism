/* stylelint-disable declaration-no-important */
/* stylelint-disable color-named */
/* stylelint-disable time-min-milliseconds */

/* ------------ */
/* Custom properties */
/* ------------ */
:root {
  /* colors */
  --clr-dark: 230deg 35% 7%;
  --clr-accent: 231deg 77% 90%;
  --clr-white: 0deg 0% 100%;

  /* fonts-sizes */
  --fs-900: 9.375rem;
  --fs-800: 6.25rem;
  --fs-700: 3.5rem;
  --fs-600: 2rem;
  --fs-500: 1.75rem;
  --fs-400: 1.125rem;
  --fs-300: 1rem;
  --fs-200: 0.875rem;

  /* font-families */
  --ff-serif: 'Bellefair', serif;
  --ff-sans-cond: 'Barlow Condensed', sans-serif;
  --ff-sans-normal: 'Barlow', sans-serif;
}

/* ------------ */
/* Reset        */
/* ------------ */

/* Box sizing */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reset margins */

body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
figure,
picture,
blockquote,
dl,
dd {
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  font-weight: 400;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  font-family: var(--ff-sans-normal);
  font-size: var(--fs-400);
  line-height: 1.5;
  text-rendering: optimizespeed;
  color: hsl(var(--clr-white));
  background-color: hsl(var(--clr-dark));
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  display: block;
  max-width: 100%;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    transition-duration: 0.01ms !important;
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    scroll-behavior: auto !important;
  }
}

/* ------------ */
/* Utility classes */
/* ------------ */

.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.flow > *:where(:not(:first-child)) {
  margin-top: var(--flow-space, 1rem);
}

.container {
  max-width: 80rem;
  margin-inline: auto;
  padding-inline: 2em;
}

.sr-only {
  position: absolute;
  overflow: hidden;
  margin: -1px;
  border: 0;
  padding: 0;
  width: 1px;
  height: 1px;
  white-space: nowrap;
  clip: rect(0, 0, 0, 0);
}

.box {
  padding: 3rem;
  background: lightblue;
}

/* colors */

.bg-dark {
  background-color: hsl(var(--clr-dark));
}

.bg-accent {
  background-color: hsl(var(--clr-accent));
}

.bg-white {
  background-color: hsl(var(--clr-white));
}

.text-dark {
  color: hsl(var(--clr-dark));
}

.text-accent {
  color: hsl(var(--clr-accent));
}

.text-white {
  color: hsl(var(--clr-white));
}

/* typography */

.ff-serif {
  font-family: var(--ff-serif);
}

.ff-sans-cond {
  font-family: var(--ff-sans-cond);
}

.ff-sans-normal {
  font-family: var(--ff-sans-normal);
}

.letter-spacing-1 {
  letter-spacing: 4.75px;
}

.letter-spacing-2 {
  letter-spacing: 2.7px;
}

.letter-spacing-3 {
  letter-spacing: 2.35px;
}

.uppercase {
  text-transform: uppercase;
}

.fs-900 {
  font-size: var(--fs-900);
}

.fs-800 {
  font-size: var(--fs-800);
}

.fs-700 {
  font-size: var(--fs-700);
}

.fs-600 {
  font-size: var(--fs-600);
}

.fs-500 {
  font-size: var(--fs-500);
}

.fs-400 {
  font-size: var(--fs-400);
}

.fs-300 {
  font-size: var(--fs-300);
}

.fs-200 {
  font-size: var(--fs-200);
}

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
  line-height: 1.1;
}

.numbered-title {
  font-family: var(--ff-sans-cond);
  font-size: var(--fs-500);
  letter-spacing: 4.72px;
  text-transform: uppercase;
}

.numbered-title span {
  margin-right: 0.5em;
  font-weight: 700;
  color: hsl(var(--clr-white) / 25%);
}

/* ------------ */
/* Components   */
/* ------------ */

.large-button {
  position: relative;
  z-index: 1;
  display: grid;
  place-items: center;
  border-radius: 50%;
  padding: 0 2em;
  text-decoration: none;
  aspect-ratio: 1;
}

.large-button::after {
  content: '';
  position: absolute;
  z-index: -1;
  border-radius: 50%;
  width: 100%;
  height: 100%;
  background-color: hsl(var(--clr-white) / 10%);
  opacity: 0;
  transition: opacity 500ms linear, transform 750ms ease-in-out;
}

.large-button:hover::after,
.large-button:focus::after {
  opacity: 1;
  transform: scale(1.5);
}

.primary-navigation {
  --gap: 8rem;
  --underline-gap: 2rem;

  list-style: none;
  margin: 0;
  padding: 0;
}

.primary-navigation a {
  text-decoration: none;
}

.primary-navigation a > span {
  margin-right: 0.5em;
  font-weight: 700;
}

.underline-indicators > * {
  border: 0;
  border-bottom: 0.2rem solid hsl(var(--clr-white) / 0%);
  padding: var(--underline-gap, 1rem) 0;
  transition: border-color 0.3s;
  cursor: pointer;
}

.underline-indicators > *:hover,
.underline-indicators > *:focus {
  border-color: hsl(var(--clr-white) / 50%);
}

.underline-indicators > .active,
.underline-indicators > [aria-selected='true'] {
  border-color: hsl(var(--clr-white) / 100%);
  color: hsl(var(--clr-white));
}

.tab-list {
  --gap: 2.5rem;
}

.dot-indicators > * {
  border: none;
  border-radius: 50%;
  padding: 0 0.5em;
  background-color: hsl(var(--clr-white) / 17%);
  transition: background-color 0.3s;
  cursor: pointer;
  aspect-ratio: 1;
}

.dot-indicators > *:hover,
.dot-indicators > *:focus {
  background-color: hsl(var(--clr-white) / 50%);
}

.dot-indicators > [aria-selected='true'] {
  background-color: hsl(var(--clr-white) / 100%);
}

.numbered-indicators > * {
  border: 1px solid hsl(var(--clr-white) / 17%);
  border-radius: 50%;
  width: 4em;
  height: 4em;
  transition: border-color 0.3s;
  cursor: pointer;
}

.numbered-indicators > *:hover,
.numbered-indicators > *:focus {
  border-color: hsl(var(--clr-white) / 50%);
}

.numbered-indicators > [aria-selected='true'] {
  border-color: hsl(var(--clr-white) / 100%);
  color: hsl(var(--clr-dark));
  background-color: hsl(var(--clr-white) / 100%);
}
